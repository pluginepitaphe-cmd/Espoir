#!/bin/bash
# üöÇ Script d'aide pour d√©ploiement Railway SIPORTS Backend

echo "üöÇ D√âPLOIEMENT RAILWAY - SIPORTS BACKEND"
echo "========================================"
echo ""

# V√©rifier si le dossier backend existe
if [ ! -d "deployment-final/backend" ]; then
    echo "‚ùå Dossier deployment-final/backend non trouv√©"
    echo "üí° Ex√©cutez d'abord : ./deploy-production-final.sh"
    exit 1
fi

echo "‚úÖ Dossier backend trouv√©"
echo ""

# Afficher le contenu du backend
echo "üìÅ CONTENU DU BACKEND √Ä D√âPLOYER :"
echo "=================================="
cd deployment-final/backend
ls -la
echo ""

# V√©rifier les fichiers essentiels
echo "üîç V√âRIFICATION DES FICHIERS :"
echo "=============================="

files=("server.py" "requirements.txt" "Procfile" "railway.toml" ".env")
for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file manquant"
    fi
done
echo ""

# Afficher les variables d'environnement
echo "‚öôÔ∏è  VARIABLES D'ENVIRONNEMENT √Ä CONFIGURER :"
echo "=========================================="
if [ -f ".env" ]; then
    echo "Variables automatiques depuis .env :"
    cat .env
else
    echo "Variables √† ajouter manuellement dans Railway :"
    echo "PORT=8000"
    echo "JWT_SECRET_KEY=siports-jwt-production-2024-secure"
    echo "DATABASE_URL=instance/siports_production.db"
    echo "PYTHONPATH=/app"
fi
echo ""

# Instructions Railway
echo "üöÇ INSTRUCTIONS RAILWAY :"
echo "========================"
echo ""
echo "1Ô∏è‚É£ Aller sur https://railway.app"
echo "2Ô∏è‚É£ Cliquer 'New Project'"
echo "3Ô∏è‚É£ S√©lectionner 'Deploy from local directory'"
echo "4Ô∏è‚É£ Glisser-d√©poser ce dossier : $(pwd)"
echo "5Ô∏è‚É£ Railway d√©tecte automatiquement Python"
echo "6Ô∏è‚É£ Attendre le d√©ploiement (2-3 minutes)"
echo "7Ô∏è‚É£ R√©cup√©rer l'URL g√©n√©r√©e"
echo ""

# Test du backend local
echo "üß™ TEST LOCAL DU BACKEND :"
echo "=========================="
if command -v python3 &> /dev/null; then
    echo "‚ñ∂Ô∏è  Test des imports Python..."
    python3 -c "
try:
    import fastapi
    import uvicorn
    from server import app
    print('‚úÖ Tous les imports fonctionnent')
except Exception as e:
    print(f'‚ùå Erreur import: {e}')
    " 2>/dev/null || echo "‚ö†Ô∏è  Certains imports peuvent √©chouer (normal si dans un environnement diff√©rent)"
else
    echo "‚ö†Ô∏è  Python3 non disponible pour test local"
fi
echo ""

# Informations sur les endpoints
echo "üåê ENDPOINTS BACKEND ATTENDUS :"
echo "=============================="
echo "Apr√®s d√©ploiement, testez ces URLs :"
echo ""
echo "‚Ä¢ https://votre-railway-url.up.railway.app/api/"
echo "  ‚Ü≥ Status API principal"
echo ""
echo "‚Ä¢ https://votre-railway-url.up.railway.app/api/chatbot/health"
echo "  ‚Ü≥ Health check du chatbot IA"
echo ""
echo "‚Ä¢ https://votre-railway-url.up.railway.app/api/visitor-packages"
echo "  ‚Ü≥ Liste des forfaits visiteur"
echo ""
echo "‚Ä¢ https://votre-railway-url.up.railway.app/api/auth/login"
echo "  ‚Ü≥ Endpoint d'authentification"
echo ""

# Commandes CLI Railway (optionnel)
echo "üì± COMMANDES CLI RAILWAY (OPTIONNEL) :"
echo "====================================="
echo ""
echo "Si vous pr√©f√©rez utiliser le CLI :"
echo ""
echo "# Installation"
echo "curl -fsSL https://railway.app/install.sh | sh"
echo ""
echo "# Connexion"
echo "railway login"
echo ""
echo "# Cr√©ation projet"
echo "railway new siports-backend-v2"
echo ""
echo "# D√©ploiement"
echo "railway deploy"
echo ""
echo "# Voir les logs"
echo "railway logs"
echo ""

# Retour au dossier parent
cd ../..

echo "üéØ R√âCAPITULATIF :"
echo "================="
echo "1. Votre backend est pr√™t dans deployment-final/backend/"
echo "2. Suivez les instructions Railway ci-dessus"
echo "3. Une fois d√©ploy√©, mettez √† jour l'URL dans Vercel"
echo "4. Testez les endpoints list√©s"
echo ""
echo "‚è±Ô∏è  Temps estim√© : 10-15 minutes"
echo "üéä Bonne chance avec votre d√©ploiement Railway !"